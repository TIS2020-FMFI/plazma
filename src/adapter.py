import time
import subprocess
import threading
import queue


class Adapter:
    def __init__(self, program):
        self.testing = True

        self.program = program
        self.address = None
        self.connected = False
        self.out_queue = None
        self.in_queue = None

        self.process = subprocess.Popen(["hpctrl-main/src/Debug/hpctrl.exe", "-i"], stdin=subprocess.PIPE,
                                        stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
        self.out_queue = queue.Queue()
        self.out_thread = threading.Thread(target=self.enqueue_output, args=(self.process.stdout, self.out_queue))
        self.out_thread.daemon = True
        self.out_thread.start()

        self.frequency_format = "GHz"

        #####################################################

        # print('help', file=self.process.stdin)
        # self.process.stdin.flush()
        # time.sleep(1)
        #
        # self.output = self.get_output(self.out_queue)
        # print("1" + self.output)
        #
        # print('done')

        #####################################################

    def enqueue_output(self, out, queue):
        for line in iter(out.readline, b''):
            queue.put(line)
            # print("enqueue" + line)
        out.close()
        time.sleep(1)

    def get_output(self, out_queue):
        outStr = ''
        try:
            while True:
                # print("kek ")
                outStr += out_queue.get_nowait()

        except queue.Empty:
            # print("empty queue")
            return outStr

    def connect(self, address):
        if self.testing:
            Testing.connected = True
            Testing.address = address
            self.address = address
            self.connected = True
            return True

        # TODO overenie konekcie a poslat spatnu vazbu
        print("connect " + address, file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)
        self.address = address
        self.connected = True

    def disconnect(self):
        if self.testing:
            Testing.connected = False
            Testing.address = None
            self.connected = False
            return

        print("disconnect", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)
        self.address = None
        self.connected = False

    def get_state(self):
        if self.testing:
            if Testing.connected:
                print('posielam do pristroja: GETSTATE')
                time.sleep(2)  # iba kvoli testu
                return Testing.state
            else:
                print('Error - Not connected')
                return

        try:
            # dostane OSError ak nie je connectnuty - teda ak proces skoncil(treba zmenit hpctrl)
            print('GETSTATE', file=self.process.stdin)
            self.process.stdin.flush()
            time.sleep(1)
            return self.get_output(self.out_queue)
        except OSError:
            print("NOPE")

    def set_state(self, state):  # state = string
        # TODO ked sa nieco zle posle...
        if state is None or state == "":
            print("Ummmmmmmmm chces poslat prazdny stav????")

        if self.testing:
            if Testing.connected:
                Testing.state = "Zmeneny" + Testing.state
                return True
            else:
                print('Error - Not connected')
                return False

        print("SETSTATE\n" + state, file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def preset(self):
        if self.testing:
            if Testing.connected:
                reset()
            else:
                print('Error - Not connected')
            return

        print("RESET", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def get_calibration_type(self):
        # TODO zistit ako co
        pass

    def get_calibration(self):
        if self.testing:
            if Testing.connected:
                return Testing.calib
            else:
                print('Error - Not connected')
                return

        print("GETCALIB", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)
        return self.get_output(self.out_queue)

    def set_calibration(self, calibration):
        if self.testing:
            if Testing.connected:
                Testing.calib = "Zmenena" + Testing.calib
            else:
                print('Error - Not connected')
            return

        print("SETCALIB\n" + calibration, file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def set_port1_length(self, value):
        pass

    def set_port2_length(self, value):
        pass

    def set_velocity_factor(self, value):
        pass

    def set_frequency_unit(self, unit):
        # TODO kontrola
        self.frequency_unit = unit

    def set_start_frequency(self, value):
        print("CMD STAR " + value + " " + self.frequency_unit, file=self.process.stdin)
        # TODO overit ci toto funguje takto
        print("\n.", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def set_stop_frequency(self, value):
        print("CMD STOP " + value + " " + self.frequency_unit, file=self.process.stdin)
        # TODO overit ci toto funguje takto
        print("\n.", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def set_points(self, value):
        print("CMD POIN " + value, file=self.process.stdin)
        # TODO overit ci toto funguje takto
        print("\n.", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def set_data_format(self, format):  # format = string RI/MA/DB
        print("FMT " + format, file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def set_parameters(self, parameters):  # parameters = string S11 .. S22
        print(parameters, file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def measure(self):
        if self.testing:
            if Testing.connected:
                return Testing.data1
            else:
                print('Error - Not connected')

        print("MEASURE", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)
        return self.get_output(self.out_queue)

    def start_measurement(self):
        print("M+", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)

    def end_measurement(self):
        print("M-", file=self.process.stdin)
        self.process.stdin.flush()
        time.sleep(1)


# open_terminal()
# close_terminal()
# send_command(command)
# ping()
# restart_connection()
# time.sleep() pouzivat vsade po kazdom prikaze alebo nejako inak?

# ---------- Testing:  -------------

def reset():
    Testing.state = Testing.default_state
    Testing.points = Testing.default_points
    Testing.min_freq = Testing.default_min_freq
    Testing.max_freq = Testing.default_max_freq
    print("Vykonávam preset prístroja")


class Testing:
    address = None
    connected = False
    state = default_state = """23410a42
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000004845574c455454205041434b
4152442c38373533432c302c342e3133000400000000000000000011a00080210200450100401004
2020082400028040007000000010000800000000000000000000004060002000000000000800f205
400040e01004042000000000000000000000000202000000300c0100140004000000000000000000
11a00080210200450100101004202008240002804000000000000000080000000000000000000000
4060002000000000000800f205400040e01004042000000000000000000000000202000000300c01
0014feffffffffffffffffd7ffffffffffff7fe0ffff07060b00f07ff1f17ee8ff3fe00804112404
f8ffffffffffffffffffffffff3ff0fffffffffffcffffffffffffffffbfffff411efcffffffffff
fffffffffff9fffffffffffbffff030050000004500000045a0000075a00000755e63ce655e63ce6
40000001400000014000000140000001666666fd666666fd4000000140000001666666fe666666fe
666666fe666666fe5000000350000003500000035000000350000003500000035000000350000003
50000003500000030000008100000081000000810000008150000003500000035000000350000003
00000081000000810000008100000081000000810000008140000001400000014000000140000001
00000081000000814000000140000001000000810000008100000081000000810000008100000081
00000081000000810000008100000081000000810000008100000081000000810000008100000081
00000081000000810000008100000081000000810000008103000000000000008101808080808202
80808080808080808080808080800000008100000081000000810000008100000081000000810000
008100000081ffffffff00020000000100000000ffff320101000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000320000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000a00000000000000000000000a000000000000000000000001020102030401020506
07070707ffff000000003b9aca00000000003b9aca00ffff000000003b9aca00000000003b9aca00
ffff000000003b9aca00000000003b9aca00ffffafffff03afffff03ffff5000000350000003ffff
afffff04afffff04ffff5000000450000004ffffaa19c3e7aa19c3e7ffff55e63ce855e63ce8ffff
0000008100000081ffff666667fd666667fdffffaa19c3e6aa19c3e6ffff55e63ce755e63ce7ffff
000000810000008100010000008100000081ffff0000008100000081ffff00c900c9ffff0bb80bb8
ffff00010001ffff00000081000000810001000000003b9aca00000000003b9aca00000100000000
3b9aca00000000003b9aca000001000000003b9aca00000000003b9aca000001000000003b9aca00
000000003b9aca000001000000000000000000000000000000000000000000810000008100010000
00000001000100010001000000000000000b000b0000600000036000000300000000008100000081
0000001000100000400000014000000100000001000100000000000000000000000000009fffff02
9fffff020000640000066400000600009fffff029fffff0200000000000000000000000000000000
000000000000008100000081000000000000ffff00000000ffff00010001ffff00000000ffff0000
0000ffff0000008100000081ffff0000008100000081ffff0000008100000081ffff000000810000
0081ffff4000000140000001ffff6400000664000006ffff00000000000000000000000000000000
ffff00000000000000000000000000000000ffff4000000540000005ffff00000000000000000000
000000000000ffff5000000450000004ffff4000000540000005"""
    calib = """23410a42
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000004845574c455454205041434b
4152442c38373533432c302c342e3133000400000000000000000011a00080210200450100401004
2020082400028040007000000010000800000000000000000000004060002000000000000800f205
400040e01004042000000000000000000000000202000000300c0100140004000000000000000000
11a00080210200450100101004202008240002804000000000000000080000000000000000000000
4060002000000000000800f205400040e01004042000000000000000000000000202000000300c01
0014feffffffffffffffffd7ffffffffffff7fe0ffff07060b00f07ff1f17ee8ff3fe00804112404
f8ffffffffffffffffffffffff3ff0fffffffffffcffffffffffffffffbfffff411efcffffffffff
fffffffffff9fffffffffffbffff030050000004500000045a0000075a00000755e63ce655e63ce6
40000001400000014000000140000001666666fd666666fd4000000140000001666666fe666666fe
666666fe666666fe5000000350000003500000035000000350000003500000035000000350000003
50000003500000030000008100000081000000810000008150000003500000035000000350000003
00000081000000810000008100000081000000810000008140000001400000014000000140000001
00000081000000814000000140000001000000810000008100000081000000810000008100000081
00000081000000810000008100000081000000810000008100000081000000810000008100000081
00000081000000810000008100000081000000810000008103000000000000008101808080808202
80808080808080808080808080800000008100000081000000810000008100000081000000810000
008100000081ffffffff00020000000100000000ffff320101000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000320000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000a00000000000000000000000a000000000000000000000001020102030401020506
07070707ffff000000003b9aca00000000003b9aca00ffff000000003b9aca00000000003b9aca00
ffff000000003b9aca00000000003b9aca00ffffafffff03afffff03ffff5000000350000003ffff
afffff04afffff04ffff5000000450000004ffffaa19c3e7aa19c3e7ffff55e63ce855e63ce8ffff
0000008100000081ffff666667fd666667fdffffaa19c3e6aa19c3e6ffff55e63ce755e63ce7ffff
000000810000008100010000008100000081ffff0000008100000081ffff00c900c9ffff0bb80bb8
ffff00010001ffff00000081000000810001000000003b9aca00000000003b9aca00000100000000
3b9aca00000000003b9aca000001000000003b9aca00000000003b9aca000001000000003b9aca00
000000003b9aca000001000000000000000000000000000000000000000000810000008100010000
00000001000100010001000000000000000b000b0000600000036000000300000000008100000081
0000001000100000400000014000000100000001000100000000000000000000000000009fffff02
9fffff020000640000066400000600009fffff029fffff0200000000000000000000000000000000
000000000000008100000081000000000000ffff00000000ffff00010001ffff00000000ffff0000
0000ffff0000008100000081ffff0000008100000081ffff0000008100000081ffff000000810000
0081ffff4000000140000001ffff6400000664000006ffff00000000000000000000000000000000
ffff00000000000000000000000000000000ffff4000000540000005ffff00000000000000000000
000000000000ffff5000000450000004ffff4000000540000005"""
    params = ""
    format = ""
    points = default_points = 201
    min_freq = default_min_freq = 1.000000e+09  # Hz
    max_freq = default_max_freq = 2.000000e+09  # Hz

    # !  Min freq: 1.000000e+09 Hz
    # !  Max freq: 1.100000e+09 Hz
    # !    Points: 51
    # !    Params: S11 S22
    data1 = """! S11 sweep finished in 1734 ms
! S22 sweep finished in 601 ms
! Touchstone 1.1 file saved by HPCTRL.EXE
! 1. 12. 2020 16:23:49
!
!    Source: HEWLETT PACKARD,8753C,0,4.13
!  Min freq: 1.000000e+09 Hz
!  Max freq: 1.100000e+09 Hz
!    Points: 51
!    Params: S11 S22
!
!!!!!
# GHZ S RI R 50
1.0000000000000000 0.765991 0.518951 0.186218 -0.879913
1.0020000000000000 0.765839 0.514709 0.183899 -0.880737
1.0040000000000000 0.771332 0.510559 0.183685 -0.877106
1.0060000000000000 0.773041 0.506470 0.180725 -0.878052
1.0080000000000000 0.774414 0.502411 0.177673 -0.876648
1.0100000000000000 0.776550 0.499268 0.176208 -0.876556
1.0120000000000000 0.780518 0.495880 0.175415 -0.877258
1.0140000000000000 0.782532 0.491119 0.172302 -0.875916
1.0160000000000000 0.784515 0.487610 0.168549 -0.874908
1.0180000000000000 0.786530 0.482880 0.169342 -0.872650
1.0200000000000000 0.790619 0.480255 0.167267 -0.873413
1.0220000000000000 0.791504 0.475952 0.163116 -0.873840
1.0240000000000000 0.793976 0.471405 0.162445 -0.873077
1.0260000000000000 0.796631 0.468079 0.159912 -0.873444
1.0280000000000000 0.798920 0.463806 0.158722 -0.872009
1.0300000000000000 0.800659 0.460358 0.156097 -0.872131
1.0320000000000000 0.803650 0.456390 0.154205 -0.871643
1.0340000000000000 0.805786 0.451569 0.153381 -0.869568
1.0360000000000000 0.807922 0.448151 0.152161 -0.869873
1.0380000000000000 0.809753 0.442963 0.148712 -0.869110
1.0400000000000000 0.812500 0.440704 0.147797 -0.868835
1.0420000000000000 0.816010 0.436707 0.145844 -0.870819
1.0440000000000000 0.817291 0.432129 0.143677 -0.868225
1.0460000000000000 0.819061 0.427429 0.142487 -0.867218
1.0480000000000000 0.821655 0.424164 0.138519 -0.868042
1.0500000000000000 0.825317 0.419678 0.137848 -0.868073
1.0520000000000000 0.826874 0.416718 0.135986 -0.866730
1.0540000000000000 0.827942 0.412628 0.132324 -0.866394
1.0560000000000000 0.831573 0.406738 0.132599 -0.865662
1.0580000000000001 0.831726 0.403137 0.129639 -0.865936
1.0600000000000001 0.836212 0.397156 0.128693 -0.864899
1.0620000000000001 0.837128 0.396301 0.126984 -0.864716
1.0640000000000001 0.837891 0.390533 0.124146 -0.865112
1.0660000000000001 0.841431 0.385162 0.124237 -0.863220
1.0680000000000001 0.843842 0.381378 0.121216 -0.862732
1.0700000000000001 0.846039 0.377411 0.119232 -0.862427
1.0720000000000001 0.846283 0.373047 0.117249 -0.862549
1.0740000000000001 0.849854 0.369934 0.113312 -0.861481
1.0760000000000001 0.852142 0.364655 0.113037 -0.862061
1.0780000000000001 0.852570 0.360443 0.110962 -0.860596
1.0800000000000001 0.854309 0.355103 0.109741 -0.860596
1.0820000000000001 0.855621 0.351105 0.109009 -0.859772
1.0840000000000001 0.856903 0.347504 0.107361 -0.858246
1.0860000000000001 0.860718 0.342804 0.105072 -0.859253
1.0880000000000001 0.863739 0.338959 0.103821 -0.857025
1.0900000000000001 0.864349 0.333405 0.102478 -0.857117
1.0920000000000001 0.863770 0.329712 0.099670 -0.856812
1.0940000000000001 0.866730 0.325409 0.099518 -0.856140
1.0960000000000001 0.869263 0.319794 0.098145 -0.854675
1.0980000000000001 0.869232 0.317108 0.096375 -0.854401
1.1000000000000001 0.870544 0.311981 0.095337 -0.853607"""



